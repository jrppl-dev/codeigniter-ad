networks:
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  redis:
    driver: ${VOLUMES_DRIVER}
  mysql:
    driver: ${VOLUMES_DRIVER}

services:

  ### Workspace Utilities ##################################
  workspace:
    image: ${BASE_IMAGE:-app/php-fpm}:${BASE_IMAGE_TAG:-latest}
    build:
      context: ./workspace
      args:
        - BASE_IMAGE=${BASE_IMAGE:-app/php-fpm}
        - BASE_IMAGE_TAG=${BASE_IMAGE_TAG:-latest}
        - SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}
        - SHELL_OH_MY_ZSH_AUTOSUGESTIONS=${SHELL_OH_MY_ZSH_AUTOSUGESTIONS}
        - SHELL_OH_MY_ZSH_ALIASES=${SHELL_OH_MY_ZSH_ALIASES}
        - COMPOSER_VERSION=${WORKSPACE_COMPOSER_VERSION}
        - COMPOSER_AUTH_JSON=${WORKSPACE_COMPOSER_AUTH_JSON}
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${APP_TIMEZONE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ../:/var/www
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - php-fpm
    networks:
      - backend

  ### PHP-FPM ##############################################
  php-fpm:
    image: ${BASE_IMAGE:-app/php-fpm}:${BASE_IMAGE_TAG:-latest}
    build:
      context: ./php-fpm
      args:
        - BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}
        - PHP_VERSION=${PHP_VERSION}
        - XDEBUG_PORT=${PHP_FPM_XDEBUG_PORT}
        - PUID=${PUID}
        - PGID=${PGID}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ../:/var/www
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
    depends_on:
      - mysql
    networks:
      - backend

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ../:/var/www
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - backend
    extra_hosts:
        - "host.docker.internal:host-gateway"

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${APP_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
        - backend
